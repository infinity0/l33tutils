################################################################################
# NOTIFICATION COMMANDS
################################################################################

# All the below commands take the following arguments:
#
# ARG1: min_interval, for throttle
# ARG2: max_interval, for throttle
# ARG3: power_factor, for throttle


# Polynomial backoff notify host events by GPG-encrypted email.
# Requires /usr/local/bin/throttle.
# Requires /usr/local/bin/nagios_id.
#
# The sender must be defined in $NAGIOS_HOME/local/mailrc
# The recipient's key must be contained in $NAGIOS_HOME/local/keyring.gpg
define command{
	command_name	throttle-notify-host-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\n\
Notification Type: $NOTIFICATIONTYPE$\n\
Host: $HOSTNAME$\n\
State: $HOSTSTATE$\n\
Address: $HOSTADDRESS$\n\
Info: $HOSTOUTPUT$\n\n\
Date/Time: $LONGDATETIME$\n"\
  | gpg --keyring "$$(dirname $MAINCONFIGFILE$)/local/keyring.gpg" --no-auto-key-locate --trust-model always -aer "$CONTACTEMAIL$" 2>&1 \
  | /usr/local/bin/throttle -a '$ARG1$' -b '$ARG2$' -p '$ARG3$' \
    "$TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-email_host-event-$$(/usr/local/bin/nagios_id $HOSTPROBLEMID$ $LASTHOSTPROBLEMID$ OK)" \
    /usr/bin/env MAILRC="$$(dirname $MAINCONFIGFILE$)/local/mailrc" /usr/bin/mail \
    -s "** $NOTIFICATIONTYPE$ Host $$(/usr/local/bin/nagios_id $HOSTPROBLEMID$ $LASTHOSTPROBLEMID$) $HOSTSTATE$ **" \
    "$CONTACTEMAIL$"
	}

# Polynomial backoff notify service events by GPG-encrypted email.
# Requires /usr/local/bin/throttle.
# Requires /usr/local/bin/nagios_id.
#
# The sender must be defined in $NAGIOS_HOME/local/mailrc
# The recipient's key must be contained in $NAGIOS_HOME/local/keyring.gpg
# WARNING: delivery will likely fail silently if you do not do these!!!
define command{
	command_name	throttle-notify-service-by-email
	command_line	/usr/bin/printf "%b" "***** Nagios *****\n\n\
Notification Type: $NOTIFICATIONTYPE$\n\n\
Service: $SERVICEDESC$\n\
Host: $HOSTALIAS$\n\
Address: $HOSTADDRESS$\n\
State: $SERVICESTATE$\n\n\
Date/Time: $LONGDATETIME$\n\n\
Additional Info:\n\n$SERVICEOUTPUT$\n"\
  | gpg --keyring "$$(dirname $MAINCONFIGFILE$)/local/keyring.gpg" --no-auto-key-locate --trust-model always -aer "$CONTACTEMAIL$" 2>&1 \
  | /usr/local/bin/throttle -a '$ARG1$' -b '$ARG2$' -p '$ARG3$' \
    "$TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-email_service-event-$$(/usr/local/bin/nagios_id $SERVICEPROBLEMID$ $LASTSERVICEPROBLEMID$ OK)" \
    /usr/bin/env MAILRC="$$(dirname $MAINCONFIGFILE$)/local/mailrc" /usr/bin/mail \
    -s "** $NOTIFICATIONTYPE$ Service $$(/usr/local/bin/nagios_id $SERVICEPROBLEMID$ $LASTSERVICEPROBLEMID$) $SERVICESTATE$ **" \
    "$CONTACTEMAIL$"
	}

# Polynomial-backoff-notify host events by XMPP.
# Requires /usr/local/bin/throttle and /usr/bin/sendxmpp.
#
# The sender must be defined in local/sendxmpprc in the same directory as nagios.cfg and
# it and the recipient must have each other on their contact list.
# WARNING: delivery will likely fail silently if you do not do this!!!
define command{
	command_name	throttle-notify-host-by-xmpp
	command_line	/usr/bin/printf "%b" "$NOTIFICATIONTYPE$: \
$HOSTNAME$ $HOSTADDRESS$ is $HOSTSTATE$ @ $SHORTDATETIME$: $HOSTOUTPUT$\n" \
  | /usr/local/bin/throttle -a '$ARG1$' -b '$ARG2$' -p '$ARG3$' \
    "$TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-xmpp_host-event-$$(/usr/local/bin/nagios_id $HOSTPROBLEMID$ $LASTHOSTPROBLEMID$ OK)" \
    /usr/bin/sendxmpp -t -r '$ARG4$' -a /etc/ssl/certs -f "$$(dirname $MAINCONFIGFILE$)/local/sendxmpprc" "$CONTACTPAGER$"
	}

# Polynomial-backoff-notify service events by XMPP.
# Requires /usr/local/bin/throttle and /usr/bin/sendxmpp.
#
# The sender must be defined in local/sendxmpprc in the same directory as nagios.cfg and
# it and the recipient must have each other on their contact list.
# WARNING: delivery will likely fail silently if you do not do this!!!
define command{
	command_name	throttle-notify-service-by-xmpp
	command_line	/usr/bin/printf "%b" "$NOTIFICATIONTYPE$: \
$SERVICEDESC$ on $HOSTALIAS$ $HOSTADDRESS$ is $SERVICESTATE$ @ $SHORTDATETIME$: $SERVICEOUTPUT$\n" \
  | /usr/local/bin/throttle -a '$ARG1$' -b '$ARG2$' -p '$ARG3$' \
    "$TEMPPATH$/nagios-$PROCESSSTARTTIME$-throttle-$CONTACTNAME$-xmpp_service-event-$$(/usr/local/bin/nagios_id $SERVICEPROBLEMID$ $LASTSERVICEPROBLEMID$ OK)" \
    /usr/bin/sendxmpp -t -r '$ARG4$' -a /etc/ssl/certs -f "$$(dirname $MAINCONFIGFILE$)/local/sendxmpprc" "$CONTACTPAGER$"
	}


################################################################################
# SERVICE CHECK COMMANDS
################################################################################

# Dummy active check for passive services
define command{
	command_name	missed_heartbeat
	command_line	/usr/lib/nagios/plugins/check_dummy 2 "Missed heartbeat from $ARG1$."
}

# check_smtp that allows one to specify the port of the SMTP server
# ARG1: host port
define command {
	command_name    check_smtp_port
	command_line    /usr/lib/nagios/plugins/check_smtp -H '$HOSTADDRESS$' -p '$ARG1$'
}

# check_smtp that allows one to specify the host and port of the SMTP server
# ARG1: host name
# ARG2: host port
define command {
	command_name    check_smtp_hostport
	command_line    /usr/lib/nagios/plugins/check_smtp -H '$ARG1$' -p '$ARG2$'
}

# check_all_disks that lets you provide extra args such as -A -i <ignore>
define command{
	command_name    check_all_disks_x
	command_line    /usr/lib/nagios/plugins/check_disk -w '$ARG1$' -c '$ARG2$' -e $ARG3$
}

# check_procs that lets you provide extra args such as -C <procname>
define command{
	command_name    check_procs_x
	command_line    /usr/lib/nagios/plugins/check_procs -w '$ARG1$' -c '$ARG2$' $ARG3$
}

# check_file_age isn't defined in configs but is available in the basic package
define command{
	command_name check_file_age
	command_line /usr/lib/nagios/plugins/check_file_age -w '$ARG2$' -c '$ARG3$' -f '$ARG1$'
}

# Requires /usr/local/bin/check_apcupsd
define command {
	command_name check_apcupsd
	command_line /usr/local/bin/check_apcupsd -w '$ARG2$' -c '$ARG3$' '$ARG1$'
}

# Requires /usr/local/bin/check_apcupsd
define command {
	command_name check_apcupsd_no_notify
	command_line /usr/local/bin/check_apcupsd '$ARG1$'
}

# Requires /usr/sbin/send_nsca
# Any encryption keys must be defined in local/send_nsca in the same directory as nagios.cfg
define command {
	command_name send_nsca
	command_line echo "$ARG3$ $ARG4$ 0 OK" | /usr/sbin/send_nsca -H '$ARG1$' -p '$ARG2$' -d ' ' -c "$$(dirname $MAINCONFIGFILE$)/local/send_nsca"
}

# Requires /usr/local/bin/check_urldiff
define command {
	command_name check_urldiff
	command_line /usr/local/bin/check_urldiff '$ARG1$' '$ARG2$' '$ARG3$'
}
